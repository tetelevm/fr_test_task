version: "3.8"

services:
    db:
        image: postgres:15-alpine
        container_name: fr-db
        volumes:
            - postgres_data:/var/lib/postgresql/data
        restart: unless-stopped
        environment:
            - DB_NAME=postgres
            - DB_USER=postgres
            - DB_PASSWORD=postgres
            - POSTGRES_HOST_AUTH_METHOD=trust

    backend:
        build:
            context: ./backend/
            dockerfile: ./Dockerfile
        image: dev-backend
        container_name: fr-backend
        volumes:
            - staticfiles:/backend/static/
        restart: always
        depends_on:
            - db
        networks:
            default:
                ipv4_address: 192.168.0.3
        expose:
            - 8000
        secrets:
            - backend_secrets

    frontend:
        build:
            context: ./frontend/
            dockerfile: ./Dockerfile
        image: dev-frontend
        container_name: fr-frontend
        depends_on:
            - backend
        networks:
            default:
                ipv4_address: 192.168.0.4
        expose:
            - 3000

    nginx:
        build:
            context: ./nginx/
            dockerfile: ./Dockerfile
        image: dev-nginx
        container_name: fr-nginx
        volumes:
            - staticfiles:/static/
        ports:
            - "8080:80"
        depends_on:
            - frontend
        networks:
            default:
                ipv4_address: 192.168.0.5

volumes:
    staticfiles:
    postgres_data:

networks:
    default:
        driver: bridge
        name: fr_network
        ipam:
            config:
                - subnet: 192.168.0.0/24

secrets:
    backend_secrets:
        file: backend/backend_secrets
