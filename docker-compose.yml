version: "3.8"

services:
    db:
        build:
            context: db
            dockerfile: ./Dockerfile
        image: fr-db
        container_name: fr-db
        restart: always
        volumes:
            - ./db/.db_data:/var/lib/postgresql/data
        env_file:
            - db/.env
        networks:
            default:
                ipv4_address: 192.168.0.2

    backend:
        build:
            context: backend
            dockerfile: ./Dockerfile
        image: fr-backend
        container_name: fr-backend
        restart: always
        volumes:
            - ./backend/:/backend/
            - staticfiles:/backend/static/
        depends_on:
            - db
        env_file:
            - backend/.env
            - db/.env
        secrets:
            - backend_secrets
        networks:
            default:
                ipv4_address: 192.168.0.3

    frontend:
        build:
            context: frontend
            dockerfile: ./Dockerfile
        image: fr-frontend
        container_name: fr-frontend
        volumes:
            - ./frontend/:/frontend/
        depends_on:
            - backend
        networks:
            default:
                ipv4_address: 192.168.0.4

    nginx:
        build:
            context: nginx
            dockerfile: ./Dockerfile
        image: fr-nginx
        container_name: fr-nginx
        volumes:
            - staticfiles:/static/
        ports:
            - "8080:80"
        depends_on:
            - frontend
        networks:
            default:
                ipv4_address: 192.168.0.5

volumes:
    db_data:
    staticfiles:

networks:
    default:
        name: fr_network
        ipam:
            driver: default
            config:
                - subnet: 192.168.0.0/24

secrets:
    backend_secrets:
        file: backend/backend_secrets
